<?php
/**
 * File:CRUD
 * Author: M.Alhelo
 * Date:one day befor exam
 **/

## les paramÃ©tre de .const.php exemple
[$user="toto";
$pass='totopass';
$dbhost='localhost';
$dbname='toto';]

##// fonction pour connecter Ã  la base de donnÃ©e 
function getPDO()
{
    require ".const.php";
    $dbh = new PDO('mysql:host=' . $dbhost . ';dbname=' . $dbname, $user, $pass);
    return $dbh;
}
// 
## count les number colone 
function countFilmMakers(){
    $dbh = getPDO();
    $query = "SELECT count(*) as nb FROM filmmakers";
    $statment = $dbh->prepare($query);//prepare query
    $statment->execute();//execute query
    $queryResult = $statment->fetch(PDO::FETCH_ASSOC);//prepare result for client
    extract($queryResult); // crÃ©e la variable $nb
    return $nb;
}

function getAllFilmMakers()
{
    $dbh = getPDO();
    try {
        $query = 'SELECT * FROM filmmakers';
        $statement = $dbh->prepare($query);//prepare query
        $statement->execute();//execute query
        $queryResult = $statement->fetchAll(PDO::FETCH_ASSOC);//prepare result for client
        $dbh = null;
        return $queryResult;
    } catch (PDOException $e) {
        print "Error!: " . $e->getMessage() . "<br/>";
        return null;
    }
}

function getFilmMaker($id)
{
    $dbh = getPDO();
    try {
        $query = "SELECT * FROM filmmakers WHERE id=:id";
        $statment = $dbh->prepare($query);//prepare query
        $statment->execute(['id' => $id]);//execute query
        $queryResult = $statment->fetch(PDO::FETCH_ASSOC);//prepare result for client
        $dbh = null;
        return $queryResult;
    } catch (PDOException $e) {
        print "Error!: " . $e->getMessage() . "<br/>";
        return null;
    }
}

function getFilmMakerByName ($name)
{
    try {
        $dbh = getPDO();
        $query = "SELECT * FROM filmmakers WHERE lastname=:name";
        $statement = $dbh->prepare($query);//prepare query
        $statement->execute(['name' => $name]);//execute query
        $queryResult = $statement->fetch(PDO::FETCH_ASSOC);//prepare result for client
        $dbh = null;
        return $queryResult;
    } catch (PDOException $e) {
        print "Error!: " . $e->getMessage() . "<br/>";
        return null;
    }
}

function updateFilmMaker($filmMaker)
{
    try {
        $dbh = getPDO();
        $query = "UPDATE filmmakers SET  
                    filmmakersnumber=:filmmakersnumber, 
                    firstname=:firstname, 
                    lastname=:lastname, 
                    birthname=:birthname, 
                    nationality=:nationality 
                WHERE id=:id";
        $statement = $dbh->prepare($query);//prepare query
        $statement->execute($filmMaker);//execute query
        $dbh = null;
        return true;
    } catch (PDOException $e) {
        print "Error!: " . $e->getMessage() . "<br/>";
        return false;
    }
}

function BADupdateFilmMaker($filmMaker)
{
    try {
        $dbh = getPDO();
        $query = "UPDATE filmmakers SET  
                    filmmakersnumber='{$filmMaker['filmmakersnumber']}', 
                    firstname='{$filmMaker['firstname']}', 
                    lastname='{$filmMaker['lastname']}', 
                    birthname='{$filmMaker['birthname']}', 
                    nationality='{$filmMaker['nationality']}' 
                WHERE id={$filmMaker['id']}";
        // print_r($query);
        $statement = $dbh->prepare($query);//prepare query
        $statement->execute();//execute query
        $dbh = null;
        return true;
    } catch (PDOException $e) {
        print "Error!: " . $e->getMessage() . "<br/>";
        return false;
    }
}

function createFilmMaker($filmMaker)
{
    unset ($filmMaker['id']);
    try {
        $dbh = getPDO();
        $query = "INSERT INTO filmmakers (firstname,lastname, filmmakersnumber,birthname,nationality) 
                    VALUES (:firstname, :lastname, :filmmakersnumber, :birthname, :nationality)";
        $statement = $dbh->prepare($query);//prepare query
        $statement->execute($filmMaker);//execute query
        $filmMaker['id'] = $dbh->lastInsertId(); // put the id generated by the database into the array
        $dbh = null;
        return $filmMaker;
    } catch (PDOException $e) {
        print "Error!: " . $e->getMessage() . "<br/>";
        return false;
    }
}

function deleteFilmMaker($id)
{
    try {
        $dbh = getPDO();
        $query = "DELETE FROM filmmakers WHERE id =:id";
        $statement = $dbh->prepare($query);//prepare query
        $statement->execute(['id' => $id]);//execute query
        $dbh = null;
        return true;
    } catch (PDOException $e) {
        print "Error!: " . $e->getMessage() . "<br/>";
        return false;
    }
}